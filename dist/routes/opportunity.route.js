"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.OpportunityRouter = void 0;
const express_1 = require("express");
const opportunityController_1 = require("../controllers/opportunityController");
const application_router_1 = require("./application.router");
const opportunity_schema_1 = require("../schemas/opportunity.schema");
const ValideBody_middleware_1 = require("../middlewares/ValideBody.middleware");
const tsyringe_1 = require("tsyringe");
const opportunityService_1 = require("../services/opportunityService");
const validateToken_middleware_1 = require("../middlewares/validateToken.middleware");
const isOpportunityOwner_middleware_1 = require("../middlewares/isOpportunityOwner.middleware");
const ValidId_middleware_1 = require("../middlewares/ValidId.middleware");
exports.OpportunityRouter = (0, express_1.Router)();
tsyringe_1.container.registerSingleton("OpportunityService", opportunityService_1.OpportunityService);
const opportunityController = tsyringe_1.container.resolve(opportunityController_1.OpportunityController);
exports.OpportunityRouter.post("/", validateToken_middleware_1.validateToken.execute, ValideBody_middleware_1.ValidBody.execute(opportunity_schema_1.TOpportunitySchema), (req, res) => opportunityController.create(req, res));
exports.OpportunityRouter.get("/", (req, res) => opportunityController.findMany(req, res));
exports.OpportunityRouter.get("/user", validateToken_middleware_1.validateToken.execute, (req, res) => opportunityController.findMany(req, res));
exports.OpportunityRouter.get("/:id", ValidId_middleware_1.ValidId.execute, validateToken_middleware_1.validateToken.execute, isOpportunityOwner_middleware_1.isOpportunityOwner.execute, (req, res) => opportunityController.findOne(req, res));
exports.OpportunityRouter.patch("/:id", validateToken_middleware_1.validateToken.execute, isOpportunityOwner_middleware_1.isOpportunityOwner.execute, ValideBody_middleware_1.ValidBody.execute(opportunity_schema_1.OpportunitySchema), opportunityController.update);
exports.OpportunityRouter.delete("/:id", validateToken_middleware_1.validateToken.execute, isOpportunityOwner_middleware_1.isOpportunityOwner.execute, (req, res) => opportunityController.delete(req, res));
exports.OpportunityRouter.use("/", application_router_1.ApplicationRouter);
